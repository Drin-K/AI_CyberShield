version: "3.9"

services:
  # üóÑ PostgreSQL database
  postgres:
    image: postgres:15
    container_name: postgres_db
    restart: always
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: 1234
      POSTGRES_DB: phishingdb
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-net

  # üß† Phishing detection service (Flask + SQLAlchemy)
  phishing:
    build:
      context: ../phishing-service
    container_name: phishing_service
    depends_on:
      - postgres
    environment:
      # Connect to Postgres inside the Docker network (hostname = postgres)
      - DATABASE_URL=postgresql://admin:1234@postgres:5432/phishingdb
      - FLASK_ENV=development
      - PHISHING_ALERT_API_KEY=super_secret_123
      - SCORE_BUMP_FACTOR=0.15
      - ALERT_TTL_HOURS=24
    ports:
      - "5000:5000"
    volumes:
      - ../phishing-service:/app
    restart: always
    networks:
      - app-net

  # üåê DNS tunneling detection service
  dns_tunnel:
    build:
      context: ../dns-tunnel-service
    container_name: dns_tunnel_service
    depends_on:
      - phishing
    environment:
      # URL for phishing service inside Docker network
      - PHISHING_SERVICE_URL=http://phishing:5000/api/phishing_alert
      - PHISHING_ALERT_API_KEY=super_secret_123
      - ALERT_THRESHOLD=0.6
    ports:
      - "8053:8053"
    volumes:
      - ../dns-tunnel-service:/app
    restart: always
    networks:
      - app-net

  # üß© Test client to simulate DNS traffic
  client:
    build:
      context: ../dns-tunnel-service
    container_name: dns_client
    depends_on:
      - dns_tunnel
    environment:
      # This points to the internal docker DNS tunnel hostname
      - SIM_SERVER=http://dns_tunnel:8053
    command: ["python", "client_example.py"]
    networks:
      - app-net
    # Disable automatic restart since it's just for testing
    restart: "no"

# üï∏ Shared bridge network
networks:
  app-net:
    driver: bridge

# üíæ Persistent volume for PostgreSQL data
volumes:
  postgres_data:
